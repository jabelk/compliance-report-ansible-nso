
- name: STORE CONFIGS FROM NSO AS YAML
  hosts: localhost
  connection: local
  vars:
    # ansible_user: "admin"
    # ansible_password: "admin"
    nso_url: "http://localhost:8080/jsonrpc"
    ansible_connection: "httpapi"
    ansible_network_os: "restconf"
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
    ansible_httpapi_port: 8080
    ansible_httpapi_restconf_root: "/restconf/data/"  # default
    ansible_user: "admin"
    ansible_password: "admin"
  gather_facts: no
  tasks:
    - name: sync from test
      cisco.nso.nso_action:
        url: "{{ nso_url }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        path: /ncs:devices/device{core-rtr01}/sync-from
        # input: {'outformat':'xml'}
      register: COMPLIANCE_REPORT


#     - name: SYNC FROM DEVICE TO NSO
#       cisco.nso.nso_action:
#         url: "{{ nso_url }}"
#         username: "{{ nso_username }}"
#         password: "{{ nso_password }}"
#         path: /ncs:compliance/reports/report{check-motd}/run
#         input: {}
#       register: report_result
  
#     - name: SET EXTRACTED PATH TO VAR
#       ansible.builtin.set_fact:
#         compliance_status: "{{ report_result.get('output').get('compliance-status') }}"
#         report_path: "{{ report_result.get('output').get('location') | regex_replace('https://localhost:443', '~/nso-instance/state') }}"
# # ~/nso-instance/state/compliance-reports/report_14_developer_1_2021-7-22T10:57:9:0.xml
# # ~/nso-instance/state/compliance-reports/
# # https://localhost:443/compliance-reports/report_14_developer_1_2021-7-22T10:57:9:0.xml
#     - name: DISPLAY PATH FOR LOG
#       ansible.builtin.debug: 
#         var: report_path
#         verbosity: 2

#     - name: DISPLAY REPORT STATUS
#       ansible.builtin.debug: 
#         var: compliance_status
#         verbosity: 2
  
#     - name: SET EXTRACTED PATH TO VAR
#       ansible.builtin.set_fact:
#         report_contents: " {{ lookup( 'file', report_path ) }}"

  #       - name: Load Native Config
  # cisco.nso.nso_action:
  #   url: "https://10.10.20.49/jsonrpc"
  #   username: developer
  #   password: C1sco12345
  #   path: /ncs:devices/ncs:device{dist-rtr01}/load-native-config
  #   input: { file: "/home/developer/test.cfg" , verbose: true, mode: "merge"}
  # register: result




    # - debug: var=COMPLIANCE_REPORT

    # - name: REPORT
    #   register: COMPLIANCE_REPORT
    #   ansible.netcommon.restconf_config:
    #       path: "https://10.10.20.49:443/restconf/data/tailf-ncs:compliance/reports/report=check-motd/run"
    #       method: "post"
    #       format: "xml"
    #       content: |
    #         <input><outformat>html</outformat></input>
      

    # - name: SYNC FROM DEVICE TO NSO
    #   cisco.nso.nso_action:
    #     url: https://10.10.20.49/jsonrpc
    #     username: "{{ ansible_user }}"
    #     password: "{{ ansible_password }}"
    #     path: /ncs:devices/device{"{{ item }}"}/sync-from
    #     input: {}
    #   with_items:
    #     - core-rtr01
    #     - core-rtr02
    #     - dist-rtr01
    #     - dist-rtr02



  # - name: GET CONFIG FROM NSO
  #   cisco.nso.nso_show:
  #     url: https://10.10.20.49/jsonrpc
  #     username: "{{ ansible_user }}"
  #     password: "{{ ansible_password }}"
  #     path: /ncs:devices/device{"{{ item }}"}/config
  #     operational: false
  #   register: jsonrpc_result
  #   with_items:
  #     - core-rtr01
  #     - core-rtr02
  #     - dist-rtr01
  #     - dist-rtr02

  # - name: VIEW NSO_SHOW OUTPUT
  #   debug:
  #     msg: "{{ jsonrpc_result.results }}"
  
  # - name: "DISPLAY OUTPUT"
  #   debug:
  #     msg: "{{ item.output }}"
  #   loop: "{{ jsonrpc_result.results }}"

  # - name: USE JINJA2 TO TRANSFORM JSON OUTPUT TO YAML FILE
  #   template:
  #     lstrip_blocks: yes
  #     src: json2yaml.j2
  #     dest: "vars/{{ item.item }}.yaml"
  #   loop: "{{ jsonrpc_result.results }}"
    

