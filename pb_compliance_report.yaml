
- name: STORE CONFIGS FROM NSO AS YAML
  hosts: localhost
  connection: local
  vars:
    nso_url: "http://localhost:8080/jsonrpc"
    nso_regex_replace_path: "http://localhost:8080"
    ansible_httpapi_port: 8080
    ansible_user: "admin"
    ansible_password: "admin"
  gather_facts: no
  tasks:
    # - name: sync from test
    #   cisco.nso.nso_action:
    #     url: "{{ nso_url }}"
    #     username: "{{ ansible_user }}"
    #     password: "{{ ansible_password }}"
    #     path: /ncs:devices/device{core-rtr01}/sync-from
    #     # input: {'outformat':'xml'}
    #   register: COMPLIANCE_REPORT


    - name: CREATE COMPLIANCE REPORT
      cisco.nso.nso_action:
        url: "{{ nso_url }}"
        username: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        path: /ncs:compliance/reports/report{check-motd}/run
        input: {}
      register: report_result
  
    - name: SET EXTRACTED PATH TO VAR
      ansible.builtin.set_fact:
        compliance_status: "{{ report_result.get('output').get('compliance-status') }}"
        report_path: "{{ report_result.get('output').get('location') | regex_replace(nso_regex_replace_path, '~/nso-instance/state') }}"

    # - name: DISPLAY PATH FOR LOG
    #   ansible.builtin.debug: 
    #     var: report_path
    #     verbosity: 2

    # - name: DISPLAY REPORT STATUS
    #   ansible.builtin.debug: 
    #     var: compliance_status
    #     verbosity: 2
  
    # - name: SET EXTRACTED PATH TO VAR
    #   ansible.builtin.set_fact:
    #     report_contents: " {{ lookup( 'fileglob', '~/nso-instance/state/compliance-reports/report_*', wantlist=True ) }}"

    # - name: OPEN FILE
    #   ansible.builtin.set_fact:
    #     report_contents: "{{ lookup( 'file', !unsafe report_contents[0]) }}"

    - name: CREATE MASTER XML REPORT
      assemble:
        src: "~/nso-instance/state/compliance-reports/"
        dest: "./reports/master-report.xml"
      run_once: yes

# '~/nso-instance/state/compliance-reports/report_7_admin_1_2021-7-22T16\:4\:13\:0.xml'
  #       - name: Load Native Config
  # cisco.nso.nso_action:
  #   url: "https://10.10.20.49/jsonrpc"
  #   username: developer
  #   password: C1sco12345
  #   path: /ncs:devices/ncs:device{dist-rtr01}/load-native-config
  #   input: { file: "/home/developer/test.cfg" , verbose: true, mode: "merge"}
  # register: result




    # - debug: var=COMPLIANCE_REPORT

    # - name: REPORT
    #   register: COMPLIANCE_REPORT
    #   ansible.netcommon.restconf_config:
    #       path: "https://10.10.20.49:443/restconf/data/tailf-ncs:compliance/reports/report=check-motd/run"
    #       method: "post"
    #       format: "xml"
    #       content: |
    #         <input><outformat>html</outformat></input>
      

    # - name: SYNC FROM DEVICE TO NSO
    #   cisco.nso.nso_action:
    #     url: https://10.10.20.49/jsonrpc
    #     username: "{{ ansible_user }}"
    #     password: "{{ ansible_password }}"
    #     path: /ncs:devices/device{"{{ item }}"}/sync-from
    #     input: {}
    #   with_items:
    #     - core-rtr01
    #     - core-rtr02
    #     - dist-rtr01
    #     - dist-rtr02



  # - name: GET CONFIG FROM NSO
  #   cisco.nso.nso_show:
  #     url: https://10.10.20.49/jsonrpc
  #     username: "{{ ansible_user }}"
  #     password: "{{ ansible_password }}"
  #     path: /ncs:devices/device{"{{ item }}"}/config
  #     operational: false
  #   register: jsonrpc_result
  #   with_items:
  #     - core-rtr01
  #     - core-rtr02
  #     - dist-rtr01
  #     - dist-rtr02

  # - name: VIEW NSO_SHOW OUTPUT
  #   debug:
  #     msg: "{{ jsonrpc_result.results }}"
  
  # - name: "DISPLAY OUTPUT"
  #   debug:
  #     msg: "{{ item.output }}"
  #   loop: "{{ jsonrpc_result.results }}"

  # - name: USE JINJA2 TO TRANSFORM JSON OUTPUT TO YAML FILE
  #   template:
  #     lstrip_blocks: yes
  #     src: json2yaml.j2
  #     dest: "vars/{{ item.item }}.yaml"
  #   loop: "{{ jsonrpc_result.results }}"
    

